name: Build and Push Docker Image

on:
  push:
    branches: [ "main" ]  # Trigger on push to main branch

env:
  AWS_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
  AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
  IMAGE_NAME: ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_DEFAULT_REGION }}.amazonaws.com/todo-nodejs-app

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      
      - name: Install jq
        run: sudo apt-get update && sudo apt-get install -y jq
 
      
      # # Cache Docker layers to speed up builds
      # - name: Cache Docker layers
      #   uses: actions/cache@v4
      #   with:
      #     path: /tmp/.buildx-cache
      #     key: ${{ runner.os }}-buildx-${{ github.sha }}
      #     restore-keys: |
      #       ${{ runner.os }}-buildx-

        # Prepare a dynamic image tag
      - name: Prepare image name and tag
        id: prepare_image
        run: |
          VERSION=$(jq -r .version package.json)
          BUILD_ID=${{ github.run_number }}
          IMAGE_TAG="v$VERSION.$BUILD_ID"
          echo "IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_ENV

  
      # Build and push the Docker image
      - name: Build and tag Docker image
        run: |
          docker build -t ${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }} .

      
      # Push the Docker image to the registry
      - name: Push Docker image
        run: |
          aws ecr get-login-password --region ${{ env.AWS_REGION }} | docker login --username AWS --password-stdin ${{ env.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com
          
          docker push ${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
          docker tag ${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }} ${{ env.IMAGE_NAME }}:latest
          docker push ${{ env.IMAGE_NAME }}:latest


      # # Move new cache for reuse in next build
      # - name: Move Docker cache
      #   run: |
      #     rm -rf /tmp/.buildx-cache
      #     mv /tmp/.buildx-cache-new /tmp/.buildx-cache